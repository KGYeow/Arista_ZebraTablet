@implements IDisposable

@inject NavigationManager NavigationManager

<MudNavMenu Color="Color.Info" Margin="Margin.Dense" Class="@($"py-2 {(DrawerOpen ? "px-2" : "")}")" Rounded="DrawerOpen" Style="transition: all 200ms ease-in-out">
    @if (DrawerOpen)
    {
        <MudText Typo="Typo.caption" Class="d-block px-4 py-2 text-white-50" Style="transition">Activity</MudText>
    }
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Rounded.Home" title="Home">
        Home
    </MudNavLink>
</MudNavMenu>

@code {
    [Parameter] public bool DrawerOpen { get; set; }

    // Variable declaration & initialization
    private string? currentUrl;

    // Action on component initialization
    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}